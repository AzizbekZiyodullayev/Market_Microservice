// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: staff_tarif_service.proto

package staff_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StaffTariffServiceClient is the client API for StaffTariffService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StaffTariffServiceClient interface {
	Create(ctx context.Context, in *TariffCreateReq, opts ...grpc.CallOption) (*TariffCreateResp, error)
	GetList(ctx context.Context, in *TariffGetListReq, opts ...grpc.CallOption) (*TariffGetListResp, error)
	GetById(ctx context.Context, in *TariffIdReq, opts ...grpc.CallOption) (*StaffTariff, error)
	Update(ctx context.Context, in *TariffUpdateReq, opts ...grpc.CallOption) (*TariffUpdateResp, error)
	Delete(ctx context.Context, in *TariffIdReq, opts ...grpc.CallOption) (*TariffDeleteResp, error)
}

type staffTariffServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStaffTariffServiceClient(cc grpc.ClientConnInterface) StaffTariffServiceClient {
	return &staffTariffServiceClient{cc}
}

func (c *staffTariffServiceClient) Create(ctx context.Context, in *TariffCreateReq, opts ...grpc.CallOption) (*TariffCreateResp, error) {
	out := new(TariffCreateResp)
	err := c.cc.Invoke(ctx, "/staff_service.StaffTariffService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffTariffServiceClient) GetList(ctx context.Context, in *TariffGetListReq, opts ...grpc.CallOption) (*TariffGetListResp, error) {
	out := new(TariffGetListResp)
	err := c.cc.Invoke(ctx, "/staff_service.StaffTariffService/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffTariffServiceClient) GetById(ctx context.Context, in *TariffIdReq, opts ...grpc.CallOption) (*StaffTariff, error) {
	out := new(StaffTariff)
	err := c.cc.Invoke(ctx, "/staff_service.StaffTariffService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffTariffServiceClient) Update(ctx context.Context, in *TariffUpdateReq, opts ...grpc.CallOption) (*TariffUpdateResp, error) {
	out := new(TariffUpdateResp)
	err := c.cc.Invoke(ctx, "/staff_service.StaffTariffService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffTariffServiceClient) Delete(ctx context.Context, in *TariffIdReq, opts ...grpc.CallOption) (*TariffDeleteResp, error) {
	out := new(TariffDeleteResp)
	err := c.cc.Invoke(ctx, "/staff_service.StaffTariffService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StaffTariffServiceServer is the server API for StaffTariffService service.
// All implementations should embed UnimplementedStaffTariffServiceServer
// for forward compatibility
type StaffTariffServiceServer interface {
	Create(context.Context, *TariffCreateReq) (*TariffCreateResp, error)
	GetList(context.Context, *TariffGetListReq) (*TariffGetListResp, error)
	GetById(context.Context, *TariffIdReq) (*StaffTariff, error)
	Update(context.Context, *TariffUpdateReq) (*TariffUpdateResp, error)
	Delete(context.Context, *TariffIdReq) (*TariffDeleteResp, error)
}

// UnimplementedStaffTariffServiceServer should be embedded to have forward compatible implementations.
type UnimplementedStaffTariffServiceServer struct {
}

func (UnimplementedStaffTariffServiceServer) Create(context.Context, *TariffCreateReq) (*TariffCreateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedStaffTariffServiceServer) GetList(context.Context, *TariffGetListReq) (*TariffGetListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (UnimplementedStaffTariffServiceServer) GetById(context.Context, *TariffIdReq) (*StaffTariff, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}
func (UnimplementedStaffTariffServiceServer) Update(context.Context, *TariffUpdateReq) (*TariffUpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedStaffTariffServiceServer) Delete(context.Context, *TariffIdReq) (*TariffDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

// UnsafeStaffTariffServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StaffTariffServiceServer will
// result in compilation errors.
type UnsafeStaffTariffServiceServer interface {
	mustEmbedUnimplementedStaffTariffServiceServer()
}

func RegisterStaffTariffServiceServer(s grpc.ServiceRegistrar, srv StaffTariffServiceServer) {
	s.RegisterService(&StaffTariffService_ServiceDesc, srv)
}

func _StaffTariffService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TariffCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffTariffServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staff_service.StaffTariffService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffTariffServiceServer).Create(ctx, req.(*TariffCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffTariffService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TariffGetListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffTariffServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staff_service.StaffTariffService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffTariffServiceServer).GetList(ctx, req.(*TariffGetListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffTariffService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TariffIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffTariffServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staff_service.StaffTariffService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffTariffServiceServer).GetById(ctx, req.(*TariffIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffTariffService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TariffUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffTariffServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staff_service.StaffTariffService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffTariffServiceServer).Update(ctx, req.(*TariffUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffTariffService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TariffIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffTariffServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staff_service.StaffTariffService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffTariffServiceServer).Delete(ctx, req.(*TariffIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

// StaffTariffService_ServiceDesc is the grpc.ServiceDesc for StaffTariffService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StaffTariffService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "staff_service.StaffTariffService",
	HandlerType: (*StaffTariffServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _StaffTariffService_Create_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _StaffTariffService_GetList_Handler,
		},
		{
			MethodName: "GetById",
			Handler:    _StaffTariffService_GetById_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _StaffTariffService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _StaffTariffService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "staff_tarif_service.proto",
}
